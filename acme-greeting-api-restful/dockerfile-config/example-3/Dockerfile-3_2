#  DESCRIPTION
#   * Multi-Stage
#   * Aproach : BUILD and RUNTIME
#   * Use a optimized image
#   * Best Practices Build
#   * Copy over the built artifact from the build image
# Use
#   docker build \
#       --build-arg MAVEN_IMAGE=maven:3.3-jdk-8-alpine \
#       --build-arg MAVEN_IMAGE=java:jre-8-alpine \
#       -f Dockerfile.multistage \
#       -t acme/example .

ARG MAVEN_IMAGE=maven:3.5-jdk-8
ARG JAVA_IMAGE=java:8-jre

# BUILD Stage

# Pull official base image
FROM ${MAVEN_IMAGE} as build

COPY src /usr/src/myapp/src
COPY pom.xml /usr/src/myapp
RUN mvn -f /usr/src/myapp/pom.xml clean package



# RUNTIME Stage

FROM ${JAVA_IMAGE}

WORKDIR /service

COPY --from=build target/acme-greeting-api-restful-*.jar ./

ENTRYPOINT ["java","-jar","./target/acme-greeting-api-restful-0.0.1-SNAPSHOT.jar"]

EXPOSE 8091