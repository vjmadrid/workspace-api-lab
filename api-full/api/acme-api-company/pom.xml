<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.acme.api.company</groupId>
	<artifactId>acme-api-company</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>acme-api-company</name>
	<description></description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- *** Important : Aling with architecture-core and other architecture 
			libraries -->
		<version>2.2.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<!-- *** Important : Include properties in ~/.m2/settings.xml -->

		<!-- Spring Boot Properties -->
		<start-class>com.acme.api.company.CompanyApplication</start-class>

		<!-- *** Architecture libraries *** -->
		<architecture-spring-core.version>0.0.1-SNAPSHOT</architecture-spring-core.version>
		<architecture-persistence.version>0.0.1-SNAPSHOT</architecture-persistence.version>

		<!-- *** API model libraries *** -->
		<acme-model-api-company.version>0.0.1-SNAPSHOT</acme-model-api-company.version>

		<!-- Dependency Versions -->
		<lombok.version>1.18.10</lombok.version>
		<mapstruct.version>1.3.1.Final</mapstruct.version>

		<!-- Testing -->
		<!-- * Default value -> use profile -->
		<!-- <skip.unit.tests>false</skip.unit.tests> -->

		<!-- Verifier -->
		<verifier.verification.file>src/test/verifier/verifications-test.xml</verifier.verification.file>

		<!-- Plugins -->
		<jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
	</properties>

	<!-- <profiles> They are found definitively in in ~/.m2/settings.xml -->

	<dependencies>

		<!-- *** Architecture Libraries *** -->
		<dependency>
			<groupId>com.acme.architecture.core</groupId>
			<artifactId>architecture-spring-core</artifactId>
			<version>${architecture-spring-core.version}</version>
		</dependency>

		<dependency>
			<groupId>com.acme.architecture.persistence</groupId>
			<artifactId>architecture-persistence</artifactId>
			<version>${architecture-persistence.version}</version>
		</dependency>

		<!-- *** API model libraries *** -->
		<dependency>
			<groupId>com.acme.model.api.company</groupId>
			<artifactId>acme-model-api-company</artifactId>
			<version>${acme-model-api-company.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- *** Third Party Libraries *** -->

		<!-- To reload the code when changes made -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<!-- spring-boot-maven-plugin : Plugin used to work with Spring Boot application -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- maven-compiler-plugin : Plugin used to compile the project source -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
						<arg>-Amapstruct.defaultComponentModel=spring</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- maven-surefire-plugin : Plugin used to run unit tests - Generate 
				reports in the directory target/surefire-reports -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
					<excludes>
						<exclude>**/*IntegrationTest</exclude>
						<exclude>**/*IT</exclude>
					</excludes>
					<testFailureIgnore>false</testFailureIgnore>
				</configuration>
			</plugin>


			<!-- maven-verifier-plugin : Plugin used to verify the existence of files 
				and directories -->
			<plugin>
				<artifactId>maven-verifier-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<verificationFile>${verifier.verification.file}</verificationFile>
					<failOnError>true</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>main</id>
						<phase>verify</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- jacoco-maven-plugin : Plugin used to generate code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/*com/**/mapper/struct/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>coverage-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>target/jacoco-reports</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>coverage-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>80%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
